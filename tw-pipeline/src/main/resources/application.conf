common{
  hdfs{
    host=""
    lake1Path="/user/ec2-user/alpesh/datalake/ingest"
    lake2Path="/user/ec2-user/alpesh/datalake/tranform"
    lake3Path="/user/ec2-user/alpesh/datalake/apps"
  }
  credentials{
    s3{
      awsAccessKeyId="AKIAJ2ELH27LDSU4BMUA"
      awsSecretAccessKey="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"
    }
    cassandra{
      host=""
      username=""
      password=""
    }
  }
}
ingest{
  sources=[{uberData:"s3://twna-dataeng-training-storage/uber.csv"
    ,weatherData:"s3://twna-dataeng-training-storage/weather.csv"
    ,transitData:"s3://twna-dataeng-training-storage/transit.csv"
    ,bikeShareData:"s3://twna-dataeng-training-storage/merged_citibike_tripdata.csv"}]
  output{
    hdfs {
      uri="hdfs://%s/%s/%s"
      dataSets=[{uberData:"uberdata"
      ,weatherData:"weatherdata"
      ,transitData:"transitData"
      ,bikeShareData:"bikesharedata"}]
    }
  }
}
transform{
    hdfs {
      uri="hdfs://%s/%s/%s"
      dataSets=[{uberData:"uberdata"
        ,weatherData:"weatherdata"
        ,transitData:"transitData"
        ,bikeShareData:"bikesharedata"}]
    }
}
apps{
  uri="hdfs:///%s/%s/%s"
  UberRidesByHumidityRange{
    uberData="uberdata"
    weatherData="weatherdata"
    output="uberridesbyhumidityrange"
  }
  WordCount{
    input="hdfs:///user/ec2-user/alpesh/datalake/ingest/big.txt"
    output="hdfs:///user/ec2-user/alpesh/datalake/apps/wordcount/%s"
  }
}
streaming{
  kafka{
    hosts="localhost:9092"
    topic="citybikes"
  }
  output="file:///Users/alpandy/dev-eng/data/streaming/"
  checkpoint="file:///Users/alpandy/dev-eng/data/checkpoint/"
}